name: Deploy to Homelab

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create .env file (one-line approach)
        run: echo -e "PROXMOX_HOST=${{ secrets.PROXMOX_HOST }}\nPROXMOX_USER=${{ secrets.PROXMOX_USER }}\nPROXMOX_TOKEN_NAME=${{ secrets.PROXMOX_TOKEN_NAME }}\nPROXMOX_TOKEN_VALUE=${{ secrets.PROXMOX_TOKEN_VALUE }}\nDOCKER_HOST=${{ secrets.DOCKER_HOST }}\nDOCKER_PORT=${{ secrets.DOCKER_PORT }}\nDATABASE_URL=${{ secrets.DATABASE_URL }}\nGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}\nFLASK_ENV=production\nSECRET_KEY=${{ secrets.SECRET_KEY }}\nSESSION_SECRET=${{ secrets.SESSION_SECRET }}" > .env

      - name: Copy project to server
        run: |
          # Add server to known hosts (using the more reliable StrictHostKeyChecking=no option)
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Simple approach to create the SSH connection
          echo "Host homelab" >> ~/.ssh/config
          echo "  HostName ${{ secrets.HOMELAB_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.HOMELAB_USER }}" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          
          # Create homelab directory if it doesn't exist
          ssh homelab "mkdir -p ~/homelab-dashboard"
          
          # Copy project files to server
          rsync -avz --delete \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'venv' \
            --exclude '__pycache__' \
            --exclude '*.pyc' \
            . homelab:~/homelab-dashboard/

      - name: Update Portainer stack
        run: |
          # Install jq
          sudo apt-get update && sudo apt-get install -y jq curl
          
          # Execute the update script with secrets
          bash .github/scripts/update-portainer.sh \
            "${{ secrets.PORTAINER_URL }}" \
            "${{ secrets.PORTAINER_API_KEY }}" \
            "homelab-dashboard" \
            "homelab" \
            "~/homelab-dashboard"